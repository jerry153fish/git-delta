name: Main CI
on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: "**/go.sum" 

      - name: Run Vet for code static analysis
        run: make vet

      - name: Run Tests
        run: make test

  sanity-check:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup action.yaml for local test
        run: |
          sed -i 's/docker:\/\/jerry153fish\/git-delta:latest/Dockerfile/g' action.yaml

      - name: Get Delta against master
        uses: ./
        with:
          environment: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            live/prod/*
            live/stag/*
          ignore_files: |
            *.zip

      - name: Restore action.yaml
        if: always()
        run: |
          sed -i 's/Dockerfile/docker:\/\/jerry153fish\/git-delta:latest/g' action.yaml || true

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: "**/go.sum"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

  docker-push:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: ${{ github.event_name != 'pull_request' }}
    environment: main
    needs: [test, golangci, sanity-check]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            ${{ runner.os }}-
            buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: jerry153fish/git-delta

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: |
            ${{ github.ref != 'refs/heads/main' && steps.meta.outputs.tags || '' }}
            ${{ github.ref == 'refs/heads/main' && 'jerry153fish/remote-delta:latest' || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          platforms: linux/amd64,linux/arm64

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache